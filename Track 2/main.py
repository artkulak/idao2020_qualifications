import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from joblib import Parallel, delayed
import pickle
import time

PATH = ''
test = pd.read_csv(PATH + '../train.csv')

training_columns = ['epoch', 'sat_id', 'x_sim', 'y_sim', 'z_sim', 'Vx_sim', 'Vy_sim', 'Vz_sim']
submission = test[["id", "x_sim", "y_sim", "z_sim", "Vx_sim", "Vy_sim", "Vz_sim"]]
submission.columns = ["id", "x", "y", "z", "Vx", "Vy", "Vz"]

Xtest = test.loc[:, training_columns]
t1 = time.time()
def extractTimeFeats(data):
    timeFeats = data['epoch'].apply(lambda x: str(x).split('T')[1].split('.')[0].split(':')).values
    h,m,s = [],[],[]
    for feat in timeFeats:
        h.append(feat[0]); m.append(feat[1]); s.append(feat[2])
    return h,m,s


ids = [0,
 5,
 7,
 8,
 10,
 11,
 12,
 13,
 14,
 15,
 17,
 18,
 19,
 21,
 23,
 30,
 31,
 33,
 43,
 46,
 47,
 48,
 50,
 55,
 56,
 58,
 60,
 61,
 62,
 65,
 66,
 67,
 69,
 71,
 72,
 73,
 74,
 76,
 77,
 78,
 79,
 80,
 81,
 83,
 85,
 87,
 88,
 94,
 95,
 97,
 99,
 103,
 104,
 107,
 108,
 111,
 115,
 116,
 119,
 122,
 129,
 131,
 134,
 136,
 137,
 139,
 140,
 141,
 146,
 147,
 148,
 150,
 154,
 157,
 161,
 163,
 167,
 168,
 171,
 174,
 175,
 176,
 179,
 180,
 181,
 182,
 184,
 185,
 189,
 190,
 192,
 196,
 198,
 199,
 200,
 201,
 202,
 204,
 212,
 214,
 215,
 216,
 217,
 218,
 221,
 224,
 226,
 231,
 232,
 234,
 235,
 237,
 238,
 246,
 249,
 250,
 255,
 256,
 257,
 258,
 259,
 260,
 262,
 266,
 267,
 269,
 271,
 272,
 273,
 274,
 276,
 279,
 280,
 282,
 283,
 285,
 286,
 287,
 289,
 290,
 291,
 295,
 296,
 297,
 300,
 302,
 303,
 305,
 307,
 308,
 311,
 313,
 315,
 317,
 318,
 320,
 321,
 322,
 323,
 325,
 327,
 328,
 329,
 330,
 331,
 334,
 335,
 336,
 337,
 338,
 339,
 340,
 341,
 345,
 346,
 350,
 351,
 352,
 353,
 354,
 355,
 360,
 361,
 364,
 365,
 366,
 367,
 368,
 369,
 370,
 371,
 374,
 376,
 378,
 379,
 381,
 383,
 386,
 388,
 394,
 397,
 398,
 401,
 402,
 403,
 404,
 405,
 406,
 408,
 410,
 413,
 414,
 420,
 421,
 425,
 427,
 429,
 430,
 431,
 432,
 433,
 434,
 439,
 441,
 442,
 444,
 445,
 447,
 451,
 453,
 458,
 459,
 461,
 463,
 469,
 472,
 478,
 484,
 485,
 487,
 490,
 492,
 493,
 494,
 496,
 497,
 500,
 501,
 503,
 507,
 512,
 513,
 518,
 520,
 521,
 525,
 526,
 527,
 529,
 530,
 531,
 532,
 533,
 534,
 535,
 538,
 540,
 541,
 545,
 546,
 551,
 552,
 553,
 554,
 555,
 556,
 557,
 559,
 560,
 561,
 562,
 564,
 568,
 570,
 571,
 573,
 574,
 576,
 577,
 581,
 582,
 585,
 586,
 589,
 590,
 591,
 592,
 594,
 598,
 599]
h,m,s = extractTimeFeats(Xtest)
Xtest.loc[:, 'h'] = list(map(int, h)); Xtest.loc[:, 'm'] = list(map(int, m)); Xtest.loc[:, 's'] = list(map(int, s))
Xtest.drop(columns = 'epoch', inplace = True)


nTargets = 6

for sat_id in Xtest['sat_id'].unique():
    if sat_id in ids:
        satXtest = Xtest[Xtest['sat_id'] == sat_id].drop(columns = ['sat_id'])
        print(satXtest.columns)
        satXtest = pd.concat([satXtest, satXtest.shift(1).fillna(0),satXtest.shift(2).fillna(0), satXtest.shift(3).fillna(0),
                             satXtest.shift(4).fillna(0)], axis = 1)

        for i in range(nTargets):
            with open(f'models/model_{sat_id}_{i}.pkl', 'rb') as file:
                model = pickle.load(file)
            ypred = model.predict(satXtest)
            submission.loc[satXtest.index, submission.columns[i+1]] = ypred

submission.to_csv('submission.csv', index = None)
print(time.time() - t1)